/* PrismJS 1.27.0
https://prismjs.com/download.html#themes=prism-okaidia&languages=markup+css+clike+javascript */
/**
 * okaidia theme for JavaScript, CSS and HTML
 * Loosely based on Monokai textmate theme by http://www.monokai.nl/
 * @author ocodia
 */
code[class*="language-"],
pre[class*="language-"] {
	color: #f8f8f2;
	background: none;
	text-shadow: 0 1px rgba(0, 0, 0, 0.3);
	font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
	font-size: 1em;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: 1.5;

	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;

	-webkit-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}
/* Code blocks */
pre[class*="language-"] {
	padding: 1em;
	margin: .5em 0;
	overflow: auto;
	border-radius: 0.3em;
}
:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	background: #272822;
}
/* Inline code */
:not(pre) > code[class*="language-"] {
	padding: .1em;
	border-radius: .3em;
	white-space: normal;
}
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: #8292a2;
}
.token.punctuation {
	color: #f8f8f2;
}
.token.namespace {
	opacity: .7;
}
.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
	color: #f92672;
}
.token.boolean,
.token.number {
	color: #ae81ff;
}
.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #a6e22e;
}
.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
	color: #f8f8f2;
}
.token.atrule,
.token.attr-value,
.token.function,
.token.class-name {
	color: #e6db74;
}
.token.keyword {
	color: #66d9ef;
}
.token.regex,
.token.important {
	color: #fd971f;
}
.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}
.token.entity {
	cursor: help;
}
/* ! tailwindcss v3.0.23 | MIT License | https://tailwindcss.com */
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}
::before,
::after {
  --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/
html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}
/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}
/*
Ensure the default browser behavior of the `hidden` attribute.
*/
[hidden] {
  display: none;
}
h1 {
	font-size: 1.5rem;
	line-height: 2rem;
	font-weight: 700;
}
h2 {
	font-size: 1.25rem;
	line-height: 1.75rem;
	font-weight: 700;
}
*, ::before, ::after {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x:  ;
	--tw-pan-y:  ;
	--tw-pinch-zoom:  ;
	--tw-scroll-snap-strictness: proximity;
	--tw-ordinal:  ;
	--tw-slashed-zero:  ;
	--tw-numeric-figure:  ;
	--tw-numeric-spacing:  ;
	--tw-numeric-fraction:  ;
	--tw-ring-inset:  ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur:  ;
	--tw-brightness:  ;
	--tw-contrast:  ;
	--tw-grayscale:  ;
	--tw-hue-rotate:  ;
	--tw-invert:  ;
	--tw-saturate:  ;
	--tw-sepia:  ;
	--tw-drop-shadow:  ;
	--tw-backdrop-blur:  ;
	--tw-backdrop-brightness:  ;
	--tw-backdrop-contrast:  ;
	--tw-backdrop-grayscale:  ;
	--tw-backdrop-hue-rotate:  ;
	--tw-backdrop-invert:  ;
	--tw-backdrop-opacity:  ;
	--tw-backdrop-saturate:  ;
	--tw-backdrop-sepia:  ;
}
.container {
	width: 100%;
	margin-right: auto;
	margin-left: auto;
}
@media (min-width: 100%) {
	.container {
		max-width: 100%;
	}
}
@media (min-width: 1024px) {
	.container {
		max-width: 1024px;
	}
}
@media (min-width: 1280px) {
	.container {
		max-width: 1280px;
	}
}
.prose {
	color: var(--tw-prose-body);
	max-width: 65ch;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-lead);
	font-size: 1.25em;
	line-height: 1.6;
	margin-top: 1.2em;
	margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"] *)) {
	color: #660000;
	text-decoration: none;
	font-weight: 500;
}
.prose :where(a):not(:where([class~="not-prose"] *)):hover {
	text-decoration: underline;
}
.prose :where(strong):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-bold);
	font-weight: 600;
}
.prose :where(ol):not(:where([class~="not-prose"] *)) {
	list-style-type: decimal;
	padding-left: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
	list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"] *)) {
	list-style-type: disc;
	padding-left: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
	font-weight: 400;
	color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
	color: var(--tw-prose-bullets);
}
.prose :where(hr):not(:where([class~="not-prose"] *)) {
	border-color: var(--tw-prose-hr);
	border-top-width: 1px;
	margin-top: 3em;
	margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
	font-weight: 500;
	font-style: italic;
	color: var(--tw-prose-quotes);
	border-left-width: 0.25rem;
	border-left-color: var(--tw-prose-quote-borders);
	quotes: "\201C""\201D""\2018""\2019";
	margin-top: 1.6em;
	margin-bottom: 1.6em;
	padding-left: 1em;
}
.prose :where(h1):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 800;
	font-size: 2.25em;
	margin-top: 1.25em;
	margin-bottom: 0.8888889em;
	line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 900;
}
.prose :where(h2):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 700;
	font-size: 1.5em;
	margin-top: 2em;
	margin-bottom: 1em;
	line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 800;
}
.prose :where(h3):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	font-size: 1.25em;
	margin-top: 1.6em;
	margin-bottom: 0.6em;
	line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 700;
}
.prose :where(h4):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	margin-top: 1.5em;
	margin-bottom: 0.5em;
	line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 700;
}
.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
	margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-captions);
	font-size: 0.875em;
	line-height: 1.4285714;
	margin-top: 0.8571429em;
}
.prose :where(code):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-code);
	font-weight: 600;
	font-size: 0.875em;
	background: #f3f4f6;
	padding: 0.125em;
}
.prose :where(a code):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-links);
}
.prose :where(pre):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-pre-code);
	background-color: var(--tw-prose-pre-bg);
	overflow-x: auto;
	font-weight: 400;
	font-size: 0.875em;
	line-height: 1.7142857;
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
	border-radius: 0.375rem;
	padding-top: 0.8571429em;
	padding-right: 1.1428571em;
	padding-bottom: 0.8571429em;
	padding-left: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"] *)) {
	background-color: transparent;
	border-width: 0;
	border-radius: 0;
	padding: 0;
	font-weight: inherit;
	color: inherit;
	font-size: inherit;
	font-family: inherit;
	line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
	content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
	content: none;
}
.prose :where(table):not(:where([class~="not-prose"] *)) {
	width: 100%;
	table-layout: auto;
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	font-size: 0.875em;
	line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	vertical-align: bottom;
	padding-right: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-left: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
	border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
	vertical-align: baseline;
	padding-top: 0.5714286em;
	padding-right: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-left: 0.5714286em;
}
.prose {
	--tw-prose-body: #374151;
	--tw-prose-headings: #111827;
	--tw-prose-lead: #4b5563;
	--tw-prose-links: #111827;
	--tw-prose-bold: #111827;
	--tw-prose-counters: #6b7280;
	--tw-prose-bullets: #d1d5db;
	--tw-prose-hr: #e5e7eb;
	--tw-prose-quotes: #111827;
	--tw-prose-quote-borders: #e5e7eb;
	--tw-prose-captions: #6b7280;
	--tw-prose-code: #111827;
	--tw-prose-pre-code: #e5e7eb;
	--tw-prose-pre-bg: #1f2937;
	--tw-prose-th-borders: #d1d5db;
	--tw-prose-td-borders: #e5e7eb;
	--tw-prose-invert-body: #d1d5db;
	--tw-prose-invert-headings: #fff;
	--tw-prose-invert-lead: #9ca3af;
	--tw-prose-invert-links: #fff;
	--tw-prose-invert-bold: #fff;
	--tw-prose-invert-counters: #9ca3af;
	--tw-prose-invert-bullets: #4b5563;
	--tw-prose-invert-hr: #374151;
	--tw-prose-invert-quotes: #f3f4f6;
	--tw-prose-invert-quote-borders: #374151;
	--tw-prose-invert-captions: #9ca3af;
	--tw-prose-invert-code: #fff;
	--tw-prose-invert-pre-code: #d1d5db;
	--tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
	--tw-prose-invert-th-borders: #4b5563;
	--tw-prose-invert-td-borders: #374151;
	font-size: 1rem;
	line-height: 1.75;
}
.prose :where(p):not(:where([class~="not-prose"] *)) {
	margin-top: 1.25em;
	margin-bottom: 1.25em;
}
.prose :where(img):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
	margin-bottom: 0;
}
.prose :where(video):not(:where([class~="not-prose"] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}
.prose :where(figure):not(:where([class~="not-prose"] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}
.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
	font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
	font-size: 0.9em;
}
.prose :where(li):not(:where([class~="not-prose"] *)) {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
	padding-left: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
	padding-left: 0.375em;
}
.prose > :where(ul > li p):not(:where([class~="not-prose"] *)) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}
.prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 1.25em;
}
.prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 1.25em;
}
.prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 1.25em;
}
.prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}
.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
	padding-left: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
	padding-right: 0;
}
.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
	padding-left: 0;
}
.prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
	padding-right: 0;
}
.prose > :where(:first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose > :where(:last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 0;
}
.prose :where(dt):not(:where([class~="not-prose"] *)) {
	font-weight: 600;
	margin-bottom: 0.1em;
}
.prose :where(dd):not(:where([class~="not-prose"] *)) {
	margin-bottom: 1.25em;
	padding-left: 1.25em;
}
.prose-sm {
	font-size: 0.875rem;
	line-height: 1.7142857;
}
.prose-sm :where(p):not(:where([class~="not-prose"] *)) {
	margin-top: 1.1428571em;
	margin-bottom: 1.1428571em;
}
.prose-sm :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
	font-size: 1.2857143em;
	line-height: 1.5555556;
	margin-top: 0.8888889em;
	margin-bottom: 0.8888889em;
}
.prose-sm :where(blockquote):not(:where([class~="not-prose"] *)) {
	margin-top: 1.3333333em;
	margin-bottom: 1.3333333em;
	padding-left: 1.1111111em;
}
.prose-sm :where(h1):not(:where([class~="not-prose"] *)) {
	font-size: 2.1428571em;
	margin-top: 1.25em;
	margin-bottom: 0.8em;
	line-height: 1.2;
}
.prose-sm :where(h2):not(:where([class~="not-prose"] *)) {
	font-size: 1.4285714em;
	margin-top: 1.6em;
	margin-bottom: 0.8em;
	line-height: 1.4;
}
.prose-sm :where(h3):not(:where([class~="not-prose"] *)) {
	font-size: 1.2857143em;
	margin-top: 1.5555556em;
	margin-bottom: 0.4444444em;
	line-height: 1.5555556;
}
.prose-sm :where(h4):not(:where([class~="not-prose"] *)) {
	margin-top: 1.4285714em;
	margin-bottom: 0.5714286em;
	line-height: 1.4285714;
}
.prose-sm :where(img):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
	margin-bottom: 0;
}
.prose-sm :where(video):not(:where([class~="not-prose"] *)) {
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
}
.prose-sm :where(figure):not(:where([class~="not-prose"] *)) {
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
}
.prose-sm :where(figure > *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
	margin-bottom: 0;
}
.prose-sm :where(figcaption):not(:where([class~="not-prose"] *)) {
	font-size: 0.8571429em;
	line-height: 1.3333333;
	margin-top: 0.6666667em;
}
.prose-sm :where(code):not(:where([class~="not-prose"] *)) {
	font-size: 0.8571429em;
}
.prose-sm :where(h2 code):not(:where([class~="not-prose"] *)) {
	font-size: 0.9em;
}
.prose-sm :where(h3 code):not(:where([class~="not-prose"] *)) {
	font-size: 0.8888889em;
}
.prose-sm :where(pre):not(:where([class~="not-prose"] *)) {
	font-size: 0.8571429em;
	line-height: 1.6666667;
	margin-top: 1.6666667em;
	margin-bottom: 1.6666667em;
	border-radius: 0.25rem;
	padding-top: 0.6666667em;
	padding-right: 1em;
	padding-bottom: 0.6666667em;
	padding-left: 1em;
}
.prose-sm :where(ol):not(:where([class~="not-prose"] *)) {
	padding-left: 1.5714286em;
}
.prose-sm :where(ul):not(:where([class~="not-prose"] *)) {
	padding-left: 1.5714286em;
}
.prose-sm :where(li):not(:where([class~="not-prose"] *)) {
	margin-top: 0.2857143em;
	margin-bottom: 0.2857143em;
}
.prose-sm :where(ol > li):not(:where([class~="not-prose"] *)) {
	padding-left: 0.4285714em;
}
.prose-sm :where(ul > li):not(:where([class~="not-prose"] *)) {
	padding-left: 0.4285714em;
}
.prose-sm > :where(ul > li p):not(:where([class~="not-prose"] *)) {
	margin-top: 0.5714286em;
	margin-bottom: 0.5714286em;
}
.prose-sm > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 1.1428571em;
}
.prose-sm > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 1.1428571em;
}
.prose-sm > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 1.1428571em;
}
.prose-sm > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 1.1428571em;
}
.prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
	margin-top: 0.5714286em;
	margin-bottom: 0.5714286em;
}
.prose-sm :where(hr):not(:where([class~="not-prose"] *)) {
	margin-top: 2.8571429em;
	margin-bottom: 2.8571429em;
}
.prose-sm :where(hr + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose-sm :where(h2 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose-sm :where(h3 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose-sm :where(h4 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose-sm :where(table):not(:where([class~="not-prose"] *)) {
	font-size: 0.8571429em;
	line-height: 1.5;
}
.prose-sm :where(thead th):not(:where([class~="not-prose"] *)) {
	padding-right: 1em;
	padding-bottom: 0.6666667em;
	padding-left: 1em;
}
.prose-sm :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
	padding-left: 0;
}
.prose-sm :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
	padding-right: 0;
}
.prose-sm :where(tbody td):not(:where([class~="not-prose"] *)) {
	padding-top: 0.6666667em;
	padding-right: 1em;
	padding-bottom: 0.6666667em;
	padding-left: 1em;
}
.prose-sm :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
	padding-left: 0;
}
.prose-sm :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
	padding-right: 0;
}
.prose-sm > :where(:first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}
.prose-sm > :where(:last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 0;
}
.icon {
	position: relative;
	display: inline-block;
	height: 1rem;
	width: 1rem;
	fill: currentColor;
      top: -0.1em;
}
.notice--warning {
	border-radius: 0.375rem;
	--tw-bg-opacity: 1;
	background-color: rgb(254 249 195 / var(--tw-bg-opacity));
	padding: 1rem;
}
.notice--info {
	border-radius: 0.375rem;
	--tw-bg-opacity: 1;
	background-color: rgb(219 234 254 / var(--tw-bg-opacity));
	padding: 1rem;
}
.notice {
	border-radius: 0.375rem;
	--tw-bg-opacity: 1;
	background-color: rgb(243 244 246 / var(--tw-bg-opacity));
	padding: 1rem;
}
a.btn {
	display: inline-block !important;
	border-radius: 0.25rem !important;
	--tw-bg-opacity: 1 !important;
	background-color: rgb(107 114 128 / var(--tw-bg-opacity)) !important;
	padding-top: 0.375rem !important;
	padding-bottom: 0.375rem !important;
	padding-left: 0.625rem !important;
	padding-right: 0.625rem !important;
	font-weight: 500 !important;
	--tw-text-opacity: 1 !important;
	color: rgb(255 255 255 / var(--tw-text-opacity)) !important;
}
a.btn:hover {
	--tw-bg-opacity: 1 !important;
	background-color: rgb(75 85 99 / var(--tw-bg-opacity)) !important;
	-webkit-text-decoration-line: none !important;
	        text-decoration-line: none !important;
}
.prose img, img.thumbnail {
	margin-left: auto;
	margin-right: auto;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	border-radius: 0.375rem;
	--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 500ms;
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
.prose img:hover, img.thumbnail:hover {
	--tw-scale-x: 1.05;
	--tw-scale-y: 1.05;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.cover-img img {
	height: 100%;
	width: 100%;
	-o-object-fit: cover;
	   object-fit: cover;
}
.filter-blur-1{
      filter: blur(0.25em);
    }
.toc {
	margin-left: auto;
	margin-right: auto;
	margin-top: 1rem;
	margin-bottom: 1rem;
	width: 91.666667%;
	border-radius: 0.25rem;
	border-width: 1px;
	font-size: 0.875rem;
	line-height: 1.25rem;
	--tw-text-opacity: 1;
	color: rgb(55 65 81 / var(--tw-text-opacity));
}
@media (min-width: 1024px) {
	.toc {
		width: 75%;
	}
}
@media (min-width: 1280px) {
	.toc {
		width: 58.333333%;
	}
}
.toc h4 {
	--tw-bg-opacity: 1;
	background-color: rgb(229 231 235 / var(--tw-bg-opacity));
	padding-left: 0.75rem;
	padding-right: 0.75rem;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
	font-weight: 700;
}
.toc a {
	display: block;
	border-bottom-width: 1px;
	--tw-border-opacity: 1;
	border-color: rgb(229 231 235 / var(--tw-border-opacity));
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
	padding-left: 0.75rem;
	padding-right: 0.75rem;
	font-weight: 600;
}
.toc a:hover {
	--tw-text-opacity: 1;
	color: rgb(17 24 39 / var(--tw-text-opacity));
	-webkit-text-decoration-line: underline;
	        text-decoration-line: underline;
}
.toc li ul>li a {
	padding-left: 1.5rem;
	font-weight: 400;
}
.toc li ul>li ul>li a {
	padding-left: 2.25rem;
}
.navbarItem {
	margin-left: 1rem;
	margin-right: 1rem;
	display: block;
	padding: 0.5rem;
}
@media (min-width: 768px) {
	.navbarItem {
		display: inline-block;
	}
	.navbarItem {
		padding: 0px;
	}
}
.navbarItem a:hover {
	-webkit-text-decoration-line: underline;
	        text-decoration-line: underline;
}
.navbarItem:hover .dropdownContent {
	display: block;
}
.dropdownContent {
	z-index: 20;
	display: none;
	border-radius: 0.375rem;
	--tw-bg-opacity: 1;
	background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
@media (min-width: 768px) {
	.dropdownContent {
		position: absolute;
	}
	.dropdownContent {
		--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
		--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
		box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	}
}
.dropdownContent{
      min-width: 150px;
    }
.dropdownContent a {
	display: block;
	padding-left: 1rem;
	padding-right: 1rem;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
	font-size: 1.125rem;
	line-height: 1.75rem;
}
.navToggle {
	margin-left: 0.5rem;
	margin-bottom: 0.125rem;
	display: inline-block;
	--tw-rotate: 45deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	cursor: pointer;
	border-right-width: 2px;
	border-bottom-width: 2px;
	border-style: solid;
	--tw-border-opacity: 1;
	border-color: rgb(75 85 99 / var(--tw-border-opacity));
	padding: 0.25rem;
}
.gallery a:hover div.caption {
	display: block;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
	transition-delay: 500ms;
}
.absolute {
	position: absolute;
}
.relative {
	position: relative;
}
.inset-0 {
	top: 0px;
	right: 0px;
	bottom: 0px;
	left: 0px;
}
.inset-x-0 {
	left: 0px;
	right: 0px;
}
.-inset-x-0\.5 {
	left: -0.125rem;
	right: -0.125rem;
}
.-inset-x-0 {
	left: -0px;
	right: -0px;
}
.right-0 {
	right: 0px;
}
.bottom-0 {
	bottom: 0px;
}
.top-1\/2 {
	top: 50%;
}
.left-1\/2 {
	left: 50%;
}
.-bottom-1 {
	bottom: -0.25rem;
}
.z-20 {
	z-index: 20;
}
.z-10 {
	z-index: 10;
}
.float-right {
	float: right;
}
.float-left {
	float: left;
}
.clear-both {
	clear: both;
}
.m-0\.5 {
	margin: 0.125rem;
}
.m-0 {
	margin: 0px;
}
.my-5 {
	margin-top: 1.25rem;
	margin-bottom: 1.25rem;
}
.my-1 {
	margin-top: 0.25rem;
	margin-bottom: 0.25rem;
}
.my-4 {
	margin-top: 1rem;
	margin-bottom: 1rem;
}
.my-12 {
	margin-top: 3rem;
	margin-bottom: 3rem;
}
.mx-3 {
	margin-left: 0.75rem;
	margin-right: 0.75rem;
}
.mx-4 {
	margin-left: 1rem;
	margin-right: 1rem;
}
.ml-2 {
	margin-left: 0.5rem;
}
.mt-4 {
	margin-top: 1rem;
}
.mb-8 {
	margin-bottom: 2rem;
}
.mb-2 {
	margin-bottom: 0.5rem;
}
.mt-12 {
	margin-top: 3rem;
}
.mb-4 {
	margin-bottom: 1rem;
}
.mr-6 {
	margin-right: 1.5rem;
}
.mr-0\.5 {
	margin-right: 0.125rem;
}
.mr-0 {
	margin-right: 0px;
}
.mb-6 {
	margin-bottom: 1.5rem;
}
.mt-8 {
	margin-top: 2rem;
}
.mr-2 {
	margin-right: 0.5rem;
}
.mr-4 {
	margin-right: 1rem;
}
.-ml-px {
	margin-left: -1px;
}
.-ml-3 {
	margin-left: -0.75rem;
}
.block {
	display: block;
}
.inline-block {
	display: inline-block;
}
.inline {
	display: inline;
}
.flex {
	display: flex;
}
.table {
	display: table;
}
.grid {
	display: grid;
}
.hidden {
	display: none;
}
.h-14 {
	height: 3.5rem;
}
.h-6 {
	height: 1.5rem;
}
.h-full {
	height: 100%;
}
.h-64 {
	height: 16rem;
}
.h-80 {
	height: 20rem;
}
.h-48 {
	height: 12rem;
}
.h-72 {
	height: 18rem;
}
.h-24 {
	height: 6rem;
}
.w-14 {
	width: 3.5rem;
}
.w-6 {
	width: 1.5rem;
}
.w-full {
	width: 100%;
}
.w-1\/2 {
	width: 50%;
}
.w-3\/4 {
	width: 75%;
}
.w-10\/12 {
	width: 83.333333%;
}
.max-w-none {
	max-width: none;
}
.flex-1 {
	flex: 1 1 0%;
}
.flex-none {
	flex: none;
}
.flex-grow {
	flex-grow: 1;
}
.-translate-x-1\/2 {
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-1\/2 {
	--tw-translate-y: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform {
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.flex-col {
	flex-direction: column;
}
.flex-wrap {
	flex-wrap: wrap;
}
.place-items-center {
	place-items: center;
}
.items-center {
	align-items: center;
}
.justify-end {
	justify-content: flex-end;
}
.justify-center {
	justify-content: center;
}
.justify-between {
	justify-content: space-between;
}
.overflow-hidden {
	overflow: hidden;
}
.rounded-lg {
	border-radius: 0.5rem;
}
.rounded {
	border-radius: 0.25rem;
}
.rounded-md {
	border-radius: 0.375rem;
}
.rounded-l {
	border-top-left-radius: 0.25rem;
	border-bottom-left-radius: 0.25rem;
}
.rounded-r {
	border-top-right-radius: 0.25rem;
	border-bottom-right-radius: 0.25rem;
}
.rounded-tl {
	border-top-left-radius: 0.25rem;
}
.border {
	border-width: 1px;
}
.border-t {
	border-top-width: 1px;
}
.border-b {
	border-bottom-width: 1px;
}
.border-gray-400 {
	--tw-border-opacity: 1;
	border-color: rgb(156 163 175 / var(--tw-border-opacity));
}
.border-gray-300 {
	--tw-border-opacity: 1;
	border-color: rgb(209 213 219 / var(--tw-border-opacity));
}
.border-gray-500 {
	--tw-border-opacity: 1;
	border-color: rgb(107 114 128 / var(--tw-border-opacity));
}
.border-gray-100 {
	--tw-border-opacity: 1;
	border-color: rgb(243 244 246 / var(--tw-border-opacity));
}
.border-white {
	--tw-border-opacity: 1;
	border-color: rgb(255 255 255 / var(--tw-border-opacity));
}
.bg-gray-100 {
	--tw-bg-opacity: 1;
	background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}
.bg-gray-500 {
	--tw-bg-opacity: 1;
	background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}
.bg-gray-800 {
	--tw-bg-opacity: 1;
	background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}
.bg-gradient-to-r {
	background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.from-gray-100 {
	--tw-gradient-from: #f3f4f6;
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(243 244 246 / 0));
}
.bg-cover {
	background-size: cover;
}
.bg-center {
	background-position: center;
}
.fill-current {
	fill: currentColor;
}
.object-cover {
	-o-object-fit: cover;
	   object-fit: cover;
}
.p-4 {
	padding: 1rem;
}
.p-1 {
	padding: 0.25rem;
}
.p-1\.5 {
	padding: 0.375rem;
}
.p-2 {
	padding: 0.5rem;
}
.p-3 {
	padding: 0.75rem;
}
.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}
.py-8 {
	padding-top: 2rem;
	padding-bottom: 2rem;
}
.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}
.py-16 {
	padding-top: 4rem;
	padding-bottom: 4rem;
}
.py-0\.5 {
	padding-top: 0.125rem;
	padding-bottom: 0.125rem;
}
.py-0 {
	padding-top: 0px;
	padding-bottom: 0px;
}
.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}
.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.pt-8 {
	padding-top: 2rem;
}
.pr-4 {
	padding-right: 1rem;
}
.pb-1 {
	padding-bottom: 0.25rem;
}
.pr-2 {
	padding-right: 0.5rem;
}
.pl-2 {
	padding-left: 0.5rem;
}
.pb-2 {
	padding-bottom: 0.5rem;
}
.text-left {
	text-align: left;
}
.text-center {
	text-align: center;
}
.text-right {
	text-align: right;
}
.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}
.text-3xl {
	font-size: 1.875rem;
	line-height: 2.25rem;
}
.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}
.text-base {
	font-size: 1rem;
	line-height: 1.5rem;
}
.text-lg {
	font-size: 1.125rem;
	line-height: 1.75rem;
}
.text-4xl {
	font-size: 2.25rem;
	line-height: 2.5rem;
}
.font-bold {
	font-weight: 700;
}
.font-semibold {
	font-weight: 600;
}
.leading-tight {
	line-height: 1.25;
}
.text-gray-600 {
	--tw-text-opacity: 1;
	color: rgb(75 85 99 / var(--tw-text-opacity));
}
.text-red-900 {
	--tw-text-opacity: 1;
	color: rgb(102 0 0 / var(--tw-text-opacity));
}
.text-gray-700 {
	--tw-text-opacity: 1;
	color: rgb(55 65 81 / var(--tw-text-opacity));
}
.text-gray-500 {
	--tw-text-opacity: 1;
	color: rgb(107 114 128 / var(--tw-text-opacity));
}
.text-white {
	--tw-text-opacity: 1;
	color: rgb(255 255 255 / var(--tw-text-opacity));
}
.text-gray-400 {
	--tw-text-opacity: 1;
	color: rgb(156 163 175 / var(--tw-text-opacity));
}
.opacity-50 {
	opacity: 0.5;
}
.shadow-lg {
	--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.ring {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.text-shadow-lg {
	text-shadow: 3px 3px 6px rgb(0 0 0 / 26%), 0 0 5px rgb(15 3 86 / 22%);
}
/*
 * Extract Tailwind CSS components here according to the docs.
 * https://tailwindcss.com/docs/extracting-components/#extracting-css-components-with-apply
*/
.hover\:bg-gray-500:hover {
	--tw-bg-opacity: 1;
	background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}
.hover\:text-red-900:hover {
	--tw-text-opacity: 1;
	color: rgb(102 0 0 / var(--tw-text-opacity));
}
.hover\:text-white:hover {
	--tw-text-opacity: 1;
	color: rgb(255 255 255 / var(--tw-text-opacity));
}
.hover\:underline:hover {
	-webkit-text-decoration-line: underline;
	        text-decoration-line: underline;
}
.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
@media (min-width: 640px) {
	.sm\:-inset-x-14 {
		left: -3.5rem;
		right: -3.5rem;
	}
	.sm\:block {
		display: block;
	}
	.sm\:hidden {
		display: none;
	}
	.sm\:w-1\/2 {
		width: 50%;
	}
	.sm\:w-72 {
		width: 18rem;
	}
	.sm\:w-48 {
		width: 12rem;
	}
	.sm\:text-4xl {
		font-size: 2.25rem;
		line-height: 2.5rem;
	}
	.sm\:text-2xl {
		font-size: 1.5rem;
		line-height: 2rem;
	}
	.sm\:text-lg {
		font-size: 1.125rem;
		line-height: 1.75rem;
	}
	.sm\:text-sm {
		font-size: 0.875rem;
		line-height: 1.25rem;
	}
}
@media (min-width: 768px) {
	.md\:prose {
		color: var(--tw-prose-body);
		max-width: 65ch;
	}
	.md\:prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-lead);
		font-size: 1.25em;
		line-height: 1.6;
		margin-top: 1.2em;
		margin-bottom: 1.2em;
	}
	.md\:prose :where(a):not(:where([class~="not-prose"] *)) {
		color: #660000;
		text-decoration: none;
		font-weight: 500;
	}
	.md\:prose :where(a):not(:where([class~="not-prose"] *)):hover {
		text-decoration: underline;
	}
	.md\:prose :where(strong):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-bold);
		font-weight: 600;
	}
	.md\:prose :where(ol):not(:where([class~="not-prose"] *)) {
		list-style-type: decimal;
		padding-left: 1.625em;
	}
	.md\:prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
		list-style-type: upper-alpha;
	}
	.md\:prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
		list-style-type: lower-alpha;
	}
	.md\:prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
		list-style-type: upper-alpha;
	}
	.md\:prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
		list-style-type: lower-alpha;
	}
	.md\:prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
		list-style-type: upper-roman;
	}
	.md\:prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
		list-style-type: lower-roman;
	}
	.md\:prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
		list-style-type: upper-roman;
	}
	.md\:prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
		list-style-type: lower-roman;
	}
	.md\:prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
		list-style-type: decimal;
	}
	.md\:prose :where(ul):not(:where([class~="not-prose"] *)) {
		list-style-type: disc;
		padding-left: 1.625em;
	}
	.md\:prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
		font-weight: 400;
		color: var(--tw-prose-counters);
	}
	.md\:prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
		color: var(--tw-prose-bullets);
	}
	.md\:prose :where(hr):not(:where([class~="not-prose"] *)) {
		border-color: var(--tw-prose-hr);
		border-top-width: 1px;
		margin-top: 3em;
		margin-bottom: 3em;
	}
	.md\:prose :where(blockquote):not(:where([class~="not-prose"] *)) {
		font-weight: 500;
		font-style: italic;
		color: var(--tw-prose-quotes);
		border-left-width: 0.25rem;
		border-left-color: var(--tw-prose-quote-borders);
		quotes: "\201C""\201D""\2018""\2019";
		margin-top: 1.6em;
		margin-bottom: 1.6em;
		padding-left: 1em;
	}
	.md\:prose :where(h1):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		font-weight: 800;
		font-size: 2.25em;
		margin-top: 1.25em;
		margin-bottom: 0.8888889em;
		line-height: 1.1111111;
	}
	.md\:prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
		font-weight: 900;
	}
	.md\:prose :where(h2):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		font-weight: 700;
		font-size: 1.5em;
		margin-top: 2em;
		margin-bottom: 1em;
		line-height: 1.3333333;
	}
	.md\:prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
		font-weight: 800;
	}
	.md\:prose :where(h3):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		font-weight: 600;
		font-size: 1.25em;
		margin-top: 1.6em;
		margin-bottom: 0.6em;
		line-height: 1.6;
	}
	.md\:prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
		font-weight: 700;
	}
	.md\:prose :where(h4):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		font-weight: 600;
		margin-top: 1.5em;
		margin-bottom: 0.5em;
		line-height: 1.5;
	}
	.md\:prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
		font-weight: 700;
	}
	.md\:prose :where(figure > *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}
	.md\:prose :where(figcaption):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-captions);
		font-size: 0.875em;
		line-height: 1.4285714;
		margin-top: 0.8571429em;
	}
	.md\:prose :where(code):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-code);
		font-weight: 600;
		font-size: 0.875em;
		background: #f3f4f6;
		padding: 0.125em;
	}
	.md\:prose :where(a code):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-links);
	}
	.md\:prose :where(pre):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-pre-code);
		background-color: var(--tw-prose-pre-bg);
		overflow-x: auto;
		font-weight: 400;
		font-size: 0.875em;
		line-height: 1.7142857;
		margin-top: 1.7142857em;
		margin-bottom: 1.7142857em;
		border-radius: 0.375rem;
		padding-top: 0.8571429em;
		padding-right: 1.1428571em;
		padding-bottom: 0.8571429em;
		padding-left: 1.1428571em;
	}
	.md\:prose :where(pre code):not(:where([class~="not-prose"] *)) {
		background-color: transparent;
		border-width: 0;
		border-radius: 0;
		padding: 0;
		font-weight: inherit;
		color: inherit;
		font-size: inherit;
		font-family: inherit;
		line-height: inherit;
	}
	.md\:prose :where(pre code):not(:where([class~="not-prose"] *))::before {
		content: none;
	}
	.md\:prose :where(pre code):not(:where([class~="not-prose"] *))::after {
		content: none;
	}
	.md\:prose :where(table):not(:where([class~="not-prose"] *)) {
		width: 100%;
		table-layout: auto;
		text-align: left;
		margin-top: 2em;
		margin-bottom: 2em;
		font-size: 0.875em;
		line-height: 1.7142857;
	}
	.md\:prose :where(thead):not(:where([class~="not-prose"] *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--tw-prose-th-borders);
	}
	.md\:prose :where(thead th):not(:where([class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		font-weight: 600;
		vertical-align: bottom;
		padding-right: 0.5714286em;
		padding-bottom: 0.5714286em;
		padding-left: 0.5714286em;
	}
	.md\:prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--tw-prose-td-borders);
	}
	.md\:prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
		border-bottom-width: 0;
	}
	.md\:prose :where(tbody td):not(:where([class~="not-prose"] *)) {
		vertical-align: baseline;
		padding-top: 0.5714286em;
		padding-right: 0.5714286em;
		padding-bottom: 0.5714286em;
		padding-left: 0.5714286em;
	}
	.md\:prose {
		--tw-prose-body: #374151;
		--tw-prose-headings: #111827;
		--tw-prose-lead: #4b5563;
		--tw-prose-links: #111827;
		--tw-prose-bold: #111827;
		--tw-prose-counters: #6b7280;
		--tw-prose-bullets: #d1d5db;
		--tw-prose-hr: #e5e7eb;
		--tw-prose-quotes: #111827;
		--tw-prose-quote-borders: #e5e7eb;
		--tw-prose-captions: #6b7280;
		--tw-prose-code: #111827;
		--tw-prose-pre-code: #e5e7eb;
		--tw-prose-pre-bg: #1f2937;
		--tw-prose-th-borders: #d1d5db;
		--tw-prose-td-borders: #e5e7eb;
		--tw-prose-invert-body: #d1d5db;
		--tw-prose-invert-headings: #fff;
		--tw-prose-invert-lead: #9ca3af;
		--tw-prose-invert-links: #fff;
		--tw-prose-invert-bold: #fff;
		--tw-prose-invert-counters: #9ca3af;
		--tw-prose-invert-bullets: #4b5563;
		--tw-prose-invert-hr: #374151;
		--tw-prose-invert-quotes: #f3f4f6;
		--tw-prose-invert-quote-borders: #374151;
		--tw-prose-invert-captions: #9ca3af;
		--tw-prose-invert-code: #fff;
		--tw-prose-invert-pre-code: #d1d5db;
		--tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
		--tw-prose-invert-th-borders: #4b5563;
		--tw-prose-invert-td-borders: #374151;
		font-size: 1rem;
		line-height: 1.75;
	}
	.md\:prose :where(p):not(:where([class~="not-prose"] *)) {
		margin-top: 1.25em;
		margin-bottom: 1.25em;
	}
	.md\:prose :where(img):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}
	.md\:prose :where(video):not(:where([class~="not-prose"] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}
	.md\:prose :where(figure):not(:where([class~="not-prose"] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}
	.md\:prose :where(h2 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.875em;
	}
	.md\:prose :where(h3 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.9em;
	}
	.md\:prose :where(li):not(:where([class~="not-prose"] *)) {
		margin-top: 0.5em;
		margin-bottom: 0.5em;
	}
	.md\:prose :where(ol > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.375em;
	}
	.md\:prose :where(ul > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.375em;
	}
	.md\:prose > :where(ul > li p):not(:where([class~="not-prose"] *)) {
		margin-top: 0.75em;
		margin-bottom: 0.75em;
	}
	.md\:prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.25em;
	}
	.md\:prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.25em;
	}
	.md\:prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.25em;
	}
	.md\:prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.25em;
	}
	.md\:prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
		margin-top: 0.75em;
		margin-bottom: 0.75em;
	}
	.md\:prose :where(hr + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.md\:prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.md\:prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.md\:prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.md\:prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}
	.md\:prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}
	.md\:prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}
	.md\:prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}
	.md\:prose > :where(:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.md\:prose > :where(:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 0;
	}
	.md\:prose :where(dt):not(:where([class~="not-prose"] *)) {
		font-weight: 600;
		margin-bottom: 0.1em;
	}
	.md\:prose :where(dd):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.25em;
		padding-left: 1.25em;
	}

    .md\:prose img, img.thumbnail {
		margin-left: auto;
		margin-right: auto;
	}

    .md\:prose img, img.thumbnail {
		transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	}

    .md\:prose img, img.thumbnail {
		border-radius: 0.375rem;
	}

    .md\:prose img, img.thumbnail {
		--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
		--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
		box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	}

    .md\:prose img, img.thumbnail {
		transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
		transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
		transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}

    .md\:prose img, img.thumbnail {
		transition-duration: 500ms;
	}

    .md\:prose img, img.thumbnail {
		transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	}

    .md\:prose img:hover, img.thumbnail:hover {
		--tw-scale-x: 1.05;
		--tw-scale-y: 1.05;
		transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	}

    .md\:mt-0 {
		margin-top: 0px;
	}

    .md\:block {
		display: block;
	}

    .md\:flex {
		display: flex;
	}

    .md\:hidden {
		display: none;
	}

    .md\:w-auto {
		width: auto;
	}

    .md\:w-80 {
		width: 20rem;
	}

    .md\:w-1\/3 {
		width: 33.333333%;
	}

    .md\:items-center {
		align-items: center;
	}

    .md\:border-0 {
		border-width: 0px;
	}

    .md\:text-base {
		font-size: 1rem;
		line-height: 1.5rem;
	}

    .md\:text-sm {
		font-size: 0.875rem;
		line-height: 1.25rem;
	}

    .md\:text-xl {
		font-size: 1.25rem;
		line-height: 1.75rem;
	}
}
@media (min-width: 1024px) {
	.lg\:prose-lg {
		font-size: 1.125rem;
		line-height: 1.7777778;
	}
	.lg\:prose-lg :where(p):not(:where([class~="not-prose"] *)) {
		margin-top: 1.3333333em;
		margin-bottom: 1.3333333em;
	}
	.lg\:prose-lg :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
		font-size: 1.2222222em;
		line-height: 1.4545455;
		margin-top: 1.0909091em;
		margin-bottom: 1.0909091em;
	}
	.lg\:prose-lg :where(blockquote):not(:where([class~="not-prose"] *)) {
		margin-top: 1.6666667em;
		margin-bottom: 1.6666667em;
		padding-left: 1em;
	}
	.lg\:prose-lg :where(h1):not(:where([class~="not-prose"] *)) {
		font-size: 2.6666667em;
		margin-top: 1.25em;
		margin-bottom: 0.8333333em;
		line-height: 1;
	}
	.lg\:prose-lg :where(h2):not(:where([class~="not-prose"] *)) {
		font-size: 1.6666667em;
		margin-top: 1.8666667em;
		margin-bottom: 1.0666667em;
		line-height: 1.3333333;
	}
	.lg\:prose-lg :where(h3):not(:where([class~="not-prose"] *)) {
		font-size: 1.3333333em;
		margin-top: 1.6666667em;
		margin-bottom: 0.6666667em;
		line-height: 1.5;
	}
	.lg\:prose-lg :where(h4):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 0.4444444em;
		line-height: 1.5555556;
	}
	.lg\:prose-lg :where(img):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}
	.lg\:prose-lg :where(video):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}
	.lg\:prose-lg :where(figure):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}
	.lg\:prose-lg :where(figure > *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}
	.lg\:prose-lg :where(figcaption):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
		line-height: 1.5;
		margin-top: 1em;
	}
	.lg\:prose-lg :where(code):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
	}
	.lg\:prose-lg :where(h2 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.8666667em;
	}
	.lg\:prose-lg :where(h3 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.875em;
	}
	.lg\:prose-lg :where(pre):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
		line-height: 1.75;
		margin-top: 2em;
		margin-bottom: 2em;
		border-radius: 0.375rem;
		padding-top: 1em;
		padding-right: 1.5em;
		padding-bottom: 1em;
		padding-left: 1.5em;
	}
	.lg\:prose-lg :where(ol):not(:where([class~="not-prose"] *)) {
		padding-left: 1.5555556em;
	}
	.lg\:prose-lg :where(ul):not(:where([class~="not-prose"] *)) {
		padding-left: 1.5555556em;
	}
	.lg\:prose-lg :where(li):not(:where([class~="not-prose"] *)) {
		margin-top: 0.6666667em;
		margin-bottom: 0.6666667em;
	}
	.lg\:prose-lg :where(ol > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.4444444em;
	}
	.lg\:prose-lg :where(ul > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.4444444em;
	}
	.lg\:prose-lg > :where(ul > li p):not(:where([class~="not-prose"] *)) {
		margin-top: 0.8888889em;
		margin-bottom: 0.8888889em;
	}
	.lg\:prose-lg > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.3333333em;
	}
	.lg\:prose-lg > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.3333333em;
	}
	.lg\:prose-lg > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.3333333em;
	}
	.lg\:prose-lg > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.3333333em;
	}
	.lg\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
		margin-top: 0.8888889em;
		margin-bottom: 0.8888889em;
	}
	.lg\:prose-lg :where(hr):not(:where([class~="not-prose"] *)) {
		margin-top: 3.1111111em;
		margin-bottom: 3.1111111em;
	}
	.lg\:prose-lg :where(hr + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.lg\:prose-lg :where(h2 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.lg\:prose-lg :where(h3 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.lg\:prose-lg :where(h4 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.lg\:prose-lg :where(table):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
		line-height: 1.5;
	}
	.lg\:prose-lg :where(thead th):not(:where([class~="not-prose"] *)) {
		padding-right: 0.75em;
		padding-bottom: 0.75em;
		padding-left: 0.75em;
	}
	.lg\:prose-lg :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}
	.lg\:prose-lg :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}
	.lg\:prose-lg :where(tbody td):not(:where([class~="not-prose"] *)) {
		padding-top: 0.75em;
		padding-right: 0.75em;
		padding-bottom: 0.75em;
		padding-left: 0.75em;
	}
	.lg\:prose-lg :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}
	.lg\:prose-lg :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}
	.lg\:prose-lg > :where(:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}
	.lg\:prose-lg > :where(:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 0;
	}
	.lg\:w-96 {
		width: 24rem;
	}
	.lg\:w-1\/4 {
		width: 25%;
	}
	.lg\:text-lg {
		font-size: 1.125rem;
		line-height: 1.75rem;
	}
	.lg\:text-2xl {
		font-size: 1.5rem;
		line-height: 2rem;
	}
	.lg\:text-base {
		font-size: 1rem;
		line-height: 1.5rem;
	}
	.lg\:text-5xl {
		font-size: 3rem;
		line-height: 1;
	}
	.lg\:leading-tight {
		line-height: 1.25;
	}
}
@media (min-width: 1280px) {
	.xl\:-inset-x-3\.5 {
		left: -0.875rem;
		right: -0.875rem;
	}
	.xl\:-inset-x-3 {
		left: -0.75rem;
		right: -0.75rem;
	}
	.xl\:w-2\/3 {
		width: 66.666667%;
	}
}
